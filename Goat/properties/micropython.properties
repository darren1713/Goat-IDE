# Define Goat settings for MicroPython files (.py).
#
# Please note that, as usual: 
# these variables can be overwritten by populating the file
#
# $HOME/.GoatUser.properties (on Linux) 
#
# %HOME%/GoatUser.properties (on Windows) 


file.patterns.py=*.py

shbang.python=py
filter.python=MicroPython (py)|$(file.patterns.py)|

lexer.$(file.patterns.py)=python

api.$(file.patterns.py)=$(GoatDefaultHome)/micropython/micropython.api
autocomplete.choose.single=0
autocomplete.python.ignorecase=1
autocomplete.python.start.characters=*._-$(chars.alpha)$(chars.numeric)
autocomplete.python.fillups=(

calltip.python.use.escapes=1
calltip.python.ignorecase=1
calltip.python.end.definition=)
calltip.python.word.characters=_$(chars.alpha)$(chars.numeric)
calltip.python.parameters.start=(
calltip.python.parameters.end=)
calltip.python.parameters.separators=,

eol.mode=CRLF

keywordclass.micropython=and as assert break class continue def del elif \
else except exec finally for from global if import in is lambda not \
or pass print raise return try while with yield False None True and as assert break class continue \
def del elif else except finally for from global if import in is lambda \
nonlocal not or pass raise return try while with yield \
UART any init deinit read readall readchar readinto readline readinto write \
writechar Accel filtered_xyz tilt x y z ADC ADCAll read_channel read_core_temp \
read_core_vbat read_timed CAN any recv send DAC ExtInt noise write_timed \
triangle regs disable enable line swint I2C is_ready mem_read em_write scan \
LCD clear command contrast fill get light pixel show text LED intensity off on toggle \
Pin af_list debug dict mapper high low value __str__() af gpio mode name \
names pin port pull index reg delay udelay millis micros elapsed_millis \
elapsed_micros hard_reset bootloader disable_irq enable_irq freq wfi standby \
stop have_cdc hid info repl_uart rng sync unique_id info RTC datetime info \
Servo angle calibration pulse_width speed SPI send_recv Switch switch \
callback Timer channel counter freq period prescaler source_freq TimerChannel \
capture compare pulse_width pulse_width_percent USB_VCP any close Poll select \
register unregister modify poll calcsize pack unpack exit localtime mktime \
sleep time heappush heappop heapify dumps  loads getaddrinfo socket chdir \
getcwd listdir mkdir remove rmdir stat sync urandom CC3k connect WIZnet5k \
ipaddr cos exp log log10 phase polar rect sin sqrt enable disable collect \
mem_alloc mem_free acos acosh asin asinh atan atan2 atanh ceil copysign cosh \
degrees erf erfc expm1 fabs floor fmod frexp gamma isfinite isinf isnan ldexp \
lgamma log log10 log2 modf pow radians sinh sqrt tan tanh trunc open

keywordclass.python=$(keywordclass.micropython)

keywords.$(file.patterns.py)=$(keywordclass.micropython)

command.go.*.py=dofile $(GoatDefaultHome)/micropython/send_and_run.lua
command.go.subsystem.*.py=3

#~ statement.indent.$(file.patterns.py)=10 :
statement.indent.$(file.patterns.py)=5 class def elif else except finally \
for if try while with

statement.lookback.$(file.patterns.py)=0
block.start.$(file.patterns.py)=
block.end.$(file.patterns.py)=

view.indentation.examine.*.py=2

tab.timmy.whinge.level=1

#fold.quotes.python=1

comment.block.python=#~

indent.python.colon=1

# Python styles
# White space
style.python.0=fore:#808080
# Comment
style.python.1=fore:#007F00,$(font.comment)
# Number
style.python.2=fore:#007F7F
# String
style.python.3=fore:#7F007F,$(font.monospace)
# Single quoted string
style.python.4=fore:#7F007F,$(font.monospace)
# Keyword
style.python.5=fore:#00007F,bold
# Triple quotes
style.python.6=fore:#7F0000
# Triple double quotes
style.python.7=fore:#7F0000
# Class name definition
style.python.8=fore:#0000FF,bold
# Function or method name definition
style.python.9=fore:#007F7F,bold
# Operators
style.python.10=bold
# Identifiers
style.python.11=
# Comment-blocks
style.python.12=fore:#7F7F7F
# End of line where string is not closed
style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Highlighted identifiers
style.python.14=fore:#407090
# Decorators
style.python.15=fore:#805000
# Matched Operators
style.python.34=fore:#0000FF,bold
style.python.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.python.style=10

